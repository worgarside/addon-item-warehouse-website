[tool.poetry]
name = "addon-item-warehouse"
version = "1.0.3"
description = "Home Assistant add-on for interacting with items in a database via an API"
authors = ["Will Garside <worgarside@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.1"
sqlalchemy = "^2.0.20"
python-dotenv = "^1.0.0"
pymysql = "^1.1.0"
wg-utilities = "^3.7.0"
requests = "^2.31.0"
pytz = "^2023.3"
bidict = "^0.22.1"
uvicorn = "^0.23.2"

[tool.poetry.group.dev.dependencies]
pylint-strict-informational = "^0.1"


[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"

[tool.mypy]
show_error_codes = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
mypy_path = "item_warehouse/src/app"
plugins = ["pydantic.mypy", "sqlmypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.codespell]
ignore-words-list = "hass"
skip = '*.json,*.csv,*.xml,*.lock'

[tool.pycln]
path = "*"
expand_stars = true
all = true
no_gitignore = false

[tool.ruff]
line-length = 100
select = [
  # https://github.com/astral-sh/ruff#supported-rules
  "A",   # https://beta.ruff.rs/docs/rules/#flake8-builtins-a
  "ARG", # https://beta.ruff.rs/docs/rules/#flake8-unused-arguments-arg
  "B",   # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
  "C4",  # https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
  "COM", #https://beta.ruff.rs/docs/rules/#flake8-commas-com
  "D",   # https://beta.ruff.rs/docs/rules/#pydocstyle-d
  "E",   # https://beta.ruff.rs/docs/rules/#error-e
  "ERA", # https://beta.ruff.rs/docs/rules/#eradicate-era
  "F",   # https://beta.ruff.rs/docs/rules/#pyflakes-f
  "FA",  # https://beta.ruff.rs/docs/rules/#flake8-future-annotations-fa
  "FBT", # https://beta.ruff.rs/docs/rules/#flake8-boolean-trap-fbt
  "G",   # https://beta.ruff.rs/docs/rules/#flake8-logging-format-g
  "I",   # https://beta.ruff.rs/docs/rules/#isort-i
  "ICN", # https://beta.ruff.rs/docs/rules/#flake8-import-conventions-icn
  "N",   # https://beta.ruff.rs/docs/rules/#pep8-naming-n
  "PGH", # https://beta.ruff.rs/docs/rules/#pygrep-hooks-pgh
  "PIE", # https://beta.ruff.rs/docs/rules/#flake8-pie-pie
  "PL",  # https://beta.ruff.rs/docs/rules/#pylint-pl
  "PT",  # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
  "PTH", # https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
  "Q",   # https://beta.ruff.rs/docs/rules/#flake8-quotes-q
  "RET", # https://beta.ruff.rs/docs/rules/#flake8-return-ret
  "RSE", # https://beta.ruff.rs/docs/rules/#flake8-raise-rse
  "RUF", # https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
  "S",   # https://beta.ruff.rs/docs/rules/#flake8-bandit-s
  "SIM", # https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
  "TRY", #https://beta.ruff.rs/docs/rules/#tryceratops-try
  "UP",  # https://beta.ruff.rs/docs/rules/#pyupgrade-up
  "W",   # https://beta.ruff.rs/docs/rules/#warning-w
]
ignore = [
  "COM812", # https://beta.ruff.rs/docs/rules/missing-trailing-comma/
  "D202",   # no-blank-line-after-function
  "UP037",  # quoted-annotation
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args=6
